<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.ezen.royal.client.reservation.mapper.ReservationMapper">

	
    <!-- 해당 event_id에 대한 해설 목록을 가져온다 -->
    <!-- <select id="findCommentaryDTOList" resultType="com.ezen.royal.client.reservation.dto.SelectedCommentaryDTO">
        SELECT * FROM event_round WHERE event_id = #{event_id}
    </select> -->
    
    <!-- royal_id와 date를 받고 해설 회차리스트를 리턴한다 -->
    <select id="findCommentaryDTOList" resultType="com.ezen.royal.client.reservation.dto.SelectedCommentaryDTO">
		SELECT 
		    e.event_id,
		    e.event_name,
		    er.round_id,
		    er.round_num,
		    er.round_time,
		    NVL(SUM(r.resv_people), 0) AS curr_resv_people,
		    er.round_capacity
		FROM 
		    event_round er
		LEFT JOIN 
		    reservation r ON er.event_id = r.event_id AND er.round_num = r.round_num AND r.resv_eventdate = to_date(#{date},'MM/DD/YYYY')
		INNER JOIN 
		    event_list e ON e.event_id = er.event_id
		WHERE 
		    e.event_id = (SELECT event_id FROM event_list WHERE royal_id=#{royal_id} AND event_type='해설')
		GROUP BY 
		    e.event_id, e.event_name, er.round_id, er.round_num, er.round_time, er.round_capacity
		ORDER BY round_num
    </select>

	<!-- 예약등록 -->
	<insert id="regReservation">
		INSERT INTO reservation (
			resv_id,
			event_id,
			member_id,
			resv_num,
			<!-- resv_date, -->
			resv_people,
			resv_eventdate,
			round_num
		) VALUES (
			resv_id_seq.nextval,
			#{event_id},
			#{member_id},
			#{resv_num},
			#{resv_people},
			#{resv_eventdate},
			#{round_num}
		)
	</insert>
	
	<!-- social_id를 받고 memberDTO 반환 -->
    <select id="getMemberInfoDTO" resultType="com.ezen.royal.client.reservation.dto.MemberInfoDTO">
		SELECT * FROM member WHERE social_id = #{social_id}
    </select>

    
</mapper>